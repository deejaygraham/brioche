{"name":"brioche","tagline":"Example Inversion of Control library","body":"brioche\r\n=======\r\n\r\nExample Inversion of Control library.\r\n\r\nTo use it, create a type registry object and an instance creation object:\r\n\r\n````\r\nvar typeRegistry = new SimpleTypeRegistry();\r\nvar instanceCreator = new ResolvingInstanceCreator(typeRegistry);\r\n````\r\n\r\nThen set up the type container depending on whether you want to auto-discover all the composable types we can find:\r\n\r\n````\r\nvar container = new AutoTypeContainer(\"MyNamespace\", typeRegistry, instanceCreator);\r\n````\r\n\r\nor add types manually:\r\n \r\n````\r\nvar container = new TypeContainer(typeRegistry, instanceCreator);\r\n````\r\n\r\nand register the types you will need:\r\n\r\n````\r\nDependencyInjection.Container.Register<ISpeak, Cat>();\r\nDependencyInjection.Container.Register<ISpeak, Dog>();\r\nDependencyInjection.Container.Register<ISpeak, Parrot>();\r\nDependencyInjection.Container.Register<ISpeak, Hydra>();\r\n````\r\n\r\nThen set the IoC container:\r\n\r\n````\r\nDependencyInjection.Container = container;\r\n````\t\t\t\r\n\r\nThen when you need to create a type:\r\n\r\n````\r\nvar speaker = DependencyInjection.Container.Resolve<ISpeak>();\r\nspeaker.Speak();\r\n````\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}